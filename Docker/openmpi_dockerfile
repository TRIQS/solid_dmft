FROM ubuntu:21.10

# This platform includes dependencies for building docs
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      cmake \
      g++ \
      gfortran \
      git \
      vim \
      hdf5-tools \
      libmkl-full-dev \ 
      libboost-dev \
      libfftw3-dev \
      libnfft3-dev \
      libgfortran5 \
      libgmp-dev \
      libhdf5-dev \
      libopenmpi-dev \
      cython3 \
      openmpi-bin \
      openmpi-common \
      openmpi-doc \
      python3-dev \
      python3-mako \
      python3-numpy \
      python3-scipy \
      python3-matplotlib \
      python3-mpi4py \
      python3-pip \
      python3-sphinx \
      python3-skimage \ 
      python3-nbsphinx \
      python3-notebook \
      libpython3-dev \
      git \
      curl \
      ca-certificates \
      openssl \
      wget \
      rsync \
      libomp-dev \
      nano \
      sudo \
      less \
      # Jupyter lab packages
      texlive \
      dvipng \
      texlive-latex-extra \
      texlive-fonts-recommended \
      nodejs \
      npm \
      && \
      apt-get autoremove --purge -y && \
      apt-get autoclean -y && \
      rm -rf /var/cache/apt/* /var/lib/apt/lists/*
     
RUN pip3 install --no-cache-dir \
    cython \
    decorator \
    jupyter \
    ipywidgets \
    pytest \
    pandas \
    shapely \
    monty \
    mpi4py \
    pymatgen \
    ase \ 
    Jinja2<3.1.0 \
    Mako \
    tornado \
    zmq \
    notebook \
    tk \
    myst_parser \ 
    sphinx_rtd_theme  \
    linkify-it-py \ 
    Pandoc \
    # Jupyter lab packages
    jupyterlab \
    descartes \
    ipympl \
    RISE 

RUN jupyter-lab build

ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1
ARG NCORES=12

# create source dirs
RUN cd / && mkdir -p triqs && mkdir -p source

# W90
RUN cd /source && git clone -b develop --depth 1 https://github.com/wannier-developers/wannier90.git wannier90 \
    && cd wannier90 \
    # Using gfortran compiler 
    && echo "F90 = mpif90 \n COMMS  = mpi \n MPIF90 = mpif90 \n FCOPTS = -O3 -fallow-argument-mismatch \n LIBS = -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl \n" > make.inc \
    && cd /source/wannier90 \
    && make default lib \
    && make install

# install qe
RUN cd /source && wget --quiet https://gitlab.com/QEF/q-e/-/archive/qe-7.0/q-e-qe-7.0.tar.gz \
   && tar -xf q-e-qe-7.0.tar.gz \
   && cd q-e-qe-7.0 \
   && mkdir -p build && cd build \
   && cmake -D CMAKE_C_COMPILER=mpicc -D CMAKE_Fortran_COMPILER=mpif90 \
        -D CMAKE_VERBOSE_MAKEFILE=ON \
        -D BLA_VENDOR=Intel10_64lp_seq \
        -D QE_ENABLE_HDF5=ON \
        -D QE_FFTW_VENDOR=FFTW3 \
        -D QE_ENABLE_SCALAPACK=OFF \
        ../ \
    && make -j$NCORES all \ 
    && make install

# VASP for CSC calculations
#ADD csc_vasp.tar.gz /vasp/
#COPY openmpi_vasp.makefile /vasp/makefile.include

#RUN  cd /vasp/ \
     #&& make std \
     #&& rm -rf src/ build/ arch/

#ENV PATH=/vasp/bin:${PATH}

# triqs
ENV CPATH=/triqs/include:${CPATH} \
    PATH=/triqs/bin:${PATH} \
    LIBRARY_PATH=/triqs/lib:${LIBRARY_PATH} \
    LD_LIBRARY_PATH=/triqs/lib:${LD_LIBRARY_PATH} \
    PYTHONPATH=/triqs/lib/python3.9/site-packages:${PYTHONPATH} \
    CMAKE_PREFIX_PATH=/triqs/share/cmake:${CMAKE_PREFIX_PATH} \
    TRIQS_ROOT=/triqs

RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/TRIQS/triqs triqs.src \
    && mkdir -p triqs.build && cd triqs.build \
    && cmake ../triqs.src -DCMAKE_INSTALL_PREFIX=/triqs -DMPIEXEC_PREFLAGS='--allow-run-as-root' -DBLA_VENDOR=Intel10_64_dyn \
    && make -j$NCORES && ctest -j$NCORES && make install

# dft_tools
RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/TRIQS/dft_tools.git dft_tools.src \
    && mkdir -p dft_tools.build && cd dft_tools.build \
    && cmake ../dft_tools.src -DMPIEXEC_PREFLAGS='--allow-run-as-root' \
    && make -j$NCORES && make test && make install

# cthyb
RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/TRIQS/cthyb.git cthyb.src \
    && mkdir -p cthyb.build && cd cthyb.build \
    && cmake ../cthyb.src -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \
    && make -j$NCORES && ctest -j$NCORES && make install

# maxent
RUN cd /source && git clone -b 1.1.x --depth 1 https://github.com/TRIQS/maxent.git maxent.src \
    && mkdir -p maxent.build && cd maxent.build \
    && cmake ../maxent.src \ 
    && make -j$NCORES && ctest -j$NCORES && make install

# TPRF
RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/TRIQS/tprf.git tprf.src \
    && mkdir -p tprf.build && cd tprf.build \
    && cmake ../tprf.src -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \
    && make -j$NCORES && make test && make install

# hubbardI
RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/TRIQS/hubbardI.git hubbardI.src \
    && mkdir -p hubbardI.build && cd hubbardI.build \
    && cmake ../hubbardI.src \ 
    && make -j$NCORES && ctest -j$NCORES && make install

# download solid_dmft and install
RUN cd /source && git clone -b 3.1.x --depth 1 https://github.com/flatironinstitute/solid_dmft.git solid_dmft.src \
    && mkdir -p solid_dmft.build && cd solid_dmft.build \
    && cmake ../solid_dmft.src -DMPIEXEC_PREFLAGS='--allow-run-as-root' \
    && make test && make install

# remove source
RUN cd / && rm -rf source

# create a useful work dir
RUN cd / && mkdir work && cd work
ENV OMPI_MCA_btl_vader_single_copy_mechanism=none

# make python3 default
RUN `ln -s /usr/bin/python3 /usr/bin/python`

# expose port for jupyter
EXPOSE 8378

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
COPY jupyter_start.sh /usr/local/bin/jupyter.sh

RUN ["chmod", "+x", "/usr/local/bin/entrypoint.sh"]
RUN ["chmod", "+x", "/usr/local/bin/jupyter.sh"]

# change user and group id to match host machine if options are passed accordingly
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

