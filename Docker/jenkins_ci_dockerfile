# See ../triqs/packaging for other options
FROM flatironinstitute/cthyb:master-ubuntu-clang
ARG APPNAME=solid_dmft

# install dfttools maxent hubbardI and HartreeFock
# dft_tools
RUN cd / && git clone -b unstable --depth 1 https://github.com/TRIQS/dft_tools.git dft_tools.src \
    && mkdir -p dft_tools.build && cd dft_tools.build \
    && cmake ../dft_tools.src \
    && make -j4 install

# hubbardI
RUN cd / && git clone -b unstable --depth 1 https://github.com/TRIQS/hubbardI.git hubbardI.src \
    && mkdir -p hubbardI.build && cd hubbardI.build \
    && cmake ../hubbardI.src \
    && make install

# Hartree-Fock solver
RUN cd / && git clone -b unstable --depth 1 https://github.com/TRIQS/hartree_fock.git hartree.src \
    && mkdir -p hartree.build && cd hartree.build \
    && cmake ../hartree.src \
    && make install

# w2dynamics solver
RUN cd / && git clone -b unstable --depth 1 https://github.com/TRIQS/w2dynamics_interface.git w2dyn.src \
    && mkdir -p w2dyn.build && cd w2dyn.build \
    && cmake ../w2dyn.src \ 
    && make -j$NCORES && make install

# maxent
RUN cd / && git clone -b unstable --depth 1 https://github.com/TRIQS/maxent.git maxent.src \
    && mkdir -p maxent.build && cd maxent.build \
    && cmake ../maxent.src \
    && make install

COPY requirements.txt /src/$APPNAME/requirements.txt
RUN pip3 install -r /src/$APPNAME/requirements.txt

COPY --chown=build . $SRC/$APPNAME
WORKDIR $BUILD/$APPNAME
RUN chown build .
USER build
ARG BUILD_ID
ARG CMAKE_ARGS
RUN cmake $SRC/$APPNAME -DTRIQS_ROOT=${INSTALL} $CMAKE_ARGS && make -j4 || make -j1 VERBOSE=1
USER root
RUN make install
