FROM ubuntu:22.04 AS base

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      cmake \
      g++-12 \
      gfortran-12 \
      git \
      hdf5-tools \
      liblapack-dev \
      libboost-dev \
      libfftw3-dev \
      libnfft3-dev \
      libgfortran5 \
      libgmp-dev \
      libhdf5-dev \
      libopenmpi-dev \
      cython3 \
      openmpi-bin \
      openmpi-common \
      openmpi-doc \
      python3-dev \
      python3-mako \
      python3-numpy \
      python3-scipy \
      python3-matplotlib \
      python3-mpi4py \
      python3-pip \
      python3-sphinx \
      python3-nbsphinx \
      python3-skimage \
      python3-notebook \
      libpython3-dev \
      curl \
      ca-certificates \
      openssl \
      wget \
      rsync \
      libomp-dev \
      sudo \
      nodejs \
      npm \
      && \
      apt-get autoremove --purge -y && \
      apt-get autoclean -y && \
      rm -rf /var/cache/apt/* /var/lib/apt/lists/*

# make python3 default
RUN `ln -s /usr/bin/python3 /usr/bin/python`

RUN pip3 install --no-cache-dir \
    cython \
    decorator \
    pytest \
    shapely \
    monty \
    mpi4py \
    Jinja2 \
    Mako \
    ase \
    tornado \
    zmq \
    tk  \
    myst_parser \
    sphinx_rtd_theme  \
    linkify-it-py \
    Pandoc

# the above is cached by the github action workflow
FROM base AS pkgs

ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1
ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
ENV OMPI_MCA_rmaps_base_oversubscribe="yes"
ARG NCORES=8

# create source dirs
RUN cd / && mkdir -p triqs && mkdir -p source

ENV PYTHON_VERSION=3.10 \
    CC=gcc-12 CXX=g++-12
# triqs
ENV CPATH=/triqs/include:${CPATH} \
    PATH=/triqs/bin:${PATH} \
    LIBRARY_PATH=/triqs/lib:${LIBRARY_PATH} \
    LD_LIBRARY_PATH=/triqs/lib:${LD_LIBRARY_PATH} \
    PYTHONPATH=/triqs/lib/python3.10/site-packages:${PYTHONPATH} \
    CMAKE_PREFIX_PATH=/triqs/share/cmake:${CMAKE_PREFIX_PATH} \
    CMAKE_BUILD_PARALLEL_LEVEL=${NCORES} \
    CTEST_OUTPUT_ON_FAILURE=1 \
    CTEST_PARALLEL_LEVEL=${NCORES} \
    TRIQS_ROOT=/triqs

RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/triqs \
    && cd triqs && mkdir -p build && cd build \
    && cmake ../ -DCMAKE_INSTALL_PREFIX=/triqs \
    && make -j$NCORES && ctest -j$NCORES && make install

# dft_tools
RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/dft_tools.git \
    && cd dft_tools && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# cthyb
RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/cthyb.git \
    && cd cthyb && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# hubbardI
RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/hubbardI.git \
    && cd hubbardI && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# Hartree-Fock solver
RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/hartree_fock.git \
    && cd hartree_fock && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# maxent needed for doc build
RUN cd /source && git clone -b unstable --depth 1 https://github.com/TRIQS/maxent.git \
    && cd maxent && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# remove source
RUN cd / && rm -rf source

